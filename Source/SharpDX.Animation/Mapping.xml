<?xml version="1.0" encoding="utf-8"?>
<!--
// Copyright (c) 2010-2013 SharpDX - Alexandre Mutel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
-->
<config id="sharpdx-animation" xmlns="urn:SharpGen.Config">
  <depends>sharpdx</depends>
  
  <namespace>SharpDX.Animation</namespace>
  <assembly>SharpDX.Animation</assembly>

  <include file="uianimation.h" attach="true"/>
  
  <naming />
  
  <extension>
    <context>sharpdx-animation</context>
    <context>sharpdx-animation-ext</context>
    <context>uianimation</context>

    <context-clear />
  </extension>

  <bindings>
  </bindings>

  <mapping>
    <context>sharpdx-animation</context>
    <context>sharpdx-animation-ext</context>
    <context>uianimation</context>
    
    <!--
    // *****************************************************************
    // Animation Enumerations
    // *****************************************************************
    -->
    <map enum="UI_ANIMATION_(.*)" name-tmp="$1"/>
    <map enum-item="UI_ANIMATION_(.*)" name-tmp="$1"/>


    <map enum="UI_ANIMATION_DEPENDENCIES" flags="true"/>
    <map enum-item="UI_ANIMATION_DEPENDENCY_(.*)" name-tmp="$1"/>

    <map enum-item="UI_ANIMATION_IDLE_BEHAVIOR_(.*)" name-tmp="$1"/>
    <map enum-item="UI_ANIMATION_MANAGER_(.*)" name-tmp="$1"/>

    <map enum-item="UI_ANIMATION_MODE_(.*)" name-tmp="$1"/>
    <map enum-item="UI_ANIMATION_PRIORITY_EFFECT_(.*)" name-tmp="$1"/>
    <map enum-item="UI_ANIMATION_SCHEDULING_(.*)" name-tmp="$1"/>
    <map enum-item="UI_ANIMATION_SLOPE_(.*)" name-tmp="$1"/>
    <map enum-item="UI_ANIMATION_STORYBOARD_(.*)" name-tmp="$1"/>
    <map enum-item="UI_ANIMATION_TIMER_CLIENT_(.*)" name-tmp="$1"/>
    <map enum-item="UI_ANIMATION_UPDATE_(.*)" name-tmp="$1"/>
    
    <!--
    // *****************************************************************
    // Animation Structures
    // *****************************************************************
    -->
    <map struct="UI_ANIMATION_(.*)" name-tmp="$1"/>

    <map struct="__MIDL___MIDL_itf_UIAnimation_0000_0002_0003" name="KeyFrame"/>
    <map field="__MIDL___MIDL_itf_UIAnimation_0000_0002_0003::_" name="Id" type="void" pointer="*"/>

    <!--
    // *****************************************************************
    // Animation Interfaces
    // *****************************************************************
    -->
    <map interface="IUIAnimation(.*)" name="$1"/>

    <map param="IUIAnimationInterpolator::InterpolateValue::value" return="true"/>
    <map param="IUIAnimationInterpolator::InterpolateVelocity::velocity" return="true"/>

    <!-- IUIAnimationManager -->
    <map method="IUIAnimationManager::CreateAnimationVariable" visibility="internal"/>
    <map param="IUIAnimationManager::CreateAnimationVariable::variable" attribute="fast out"/>

    <map method="IUIAnimationManager::CreateStoryboard" visibility="internal"/>
    <map param="IUIAnimationManager::CreateStoryboard::storyboard" attribute="fast out"/>

    <map param="IUIAnimationManager::Update::updateResult" return="true"/>

    <map method="IUIAnimationManager::GetVariableFromTag" visibility="internal"/>
    <map param="IUIAnimationManager::GetVariableFromTag::object" type="void"/>
    <map param="IUIAnimationManager::GetVariableFromTag::variable" return="true"/>

    <map method="IUIAnimationManager::GetStoryboardFromTag" visibility="internal"/>
    <map param="IUIAnimationManager::GetStoryboardFromTag::object" type="void"/>
    <map param="IUIAnimationManager::GetStoryboardFromTag::storyboard" return="true"/>

    <!-- Don't generate properties for event handler setter -->
    <map interface=".*Handler2?" callback="true" visibility="internal"/>
    <map method=".*::Set.*Handler" property="false"/>
    
    <!-- Callback for Priority Comparison -->
    <map interface="IUIAnimationPriorityComparison" callback="true" visibility="internal"/>
    <map method="IUIAnimationManager::Set.*Comparison" property="false"/>

    <!-- IUIAnimationStoryboard -->
    <map param="IUIAnimationStoryboard::AddKeyframeAtOffset::keyframe" return="true"/>
    <map param="IUIAnimationStoryboard::AddKeyframeAfterTransition::keyframe" return="true"/>
    <map param="IUIAnimationStoryboard::Schedule::schedulingResult" return="true"/>

    <map method="IUIAnimationStoryboard::SetTag" visibility="internal"/>
    <map method="IUIAnimationStoryboard::GetTag" visibility="internal"/>
    <map param="IUIAnimationStoryboard::SetTag::object" type="void"/>
    <map param="IUIAnimationStoryboard::GetTag::object" type="void"/>

    <!-- IUIAnimationTransitionLibrary -->
    <map method="IUIAnimationTransitionLibrary::Create(.*)Transition" name="$1"/>
    <map method="IUIAnimationTransitionLibrary::Create(.*)Transition(.+)" name="$1$2"/>
    <map param="IUIAnimationTransitionLibrary::.*::transition" return="true"/>

    <!-- IUIAnimationTransitionFactory -->
    <map method="IUIAnimationTransitionFactory::CreateTransition" visibility="internal"/>
    <map param="IUIAnimationTransitionFactory::CreateTransition::transition" attribute="fast out"/>

    <!-- IUIAnimationVariable -->
    <map method="IUIAnimationVariable::SetTag" visibility="internal"/>
    <map method="IUIAnimationVariable::GetTag" visibility="internal"/>
    <map param="IUIAnimationVariable::SetTag::object" type="void"/>
    <map param="IUIAnimationVariable::GetTag::object" type="void"/>

    <map method="IUIAnimationTimer::IsEnabled" return="true" check="false" property="false" name="IsEnabled_" visibility="internal"/>
    <map method="IUIAnimationTransition::IsDurationKnown" return="true" check="false" property="false" name="IsDurationKnown_" visibility="internal"/>
		
		<!-- IUIAnimationVariable2 -->
		<!-- Remove dependencies on IDCompositionAnimation from this library, replace with ComObject. See SharpDX.DirectComposition for the actual wrappers. -->
		<map param="IUIAnimationVariable2::GetCurve::animation" type="IUnknown" />
		<map param="IUIAnimationVariable2::GetVectorCurve::animation" type="IUnknown" />
		
		<!-- IUIAnimationTransition2 -->
		<map method="IUIAnimationTransition2::IsDurationKnown" hresult="true" />

    <!--
    // *****************************************************************
    // Animation Functions
    // *****************************************************************
    -->

    <context-clear />
  </mapping>
</config>