<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="SurfaceImageSource.Scenario1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SurfaceImageSource"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <TextBlock TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                The demonstration below shows how to use a SurfaceImageSource to include C++ DirectX content in a XAML application.
                Each time the button below is clicked a SurfaceImageSource is filled with randomly generated rectangles drawn using Direct2D.
                The XAML Image control and Ellipse shape below are then both filled using the SurfaceImageSource.
            </TextBlock>            
            <Button Content="Draw rectangles with Direct2D" Grid.Row="1" Margin="0,10,0,10" Click="Scenario1DrawRectangles_Click" />
        </Grid>

        <StackPanel x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1" Orientation="Horizontal">
            <Border BorderBrush="Black" BorderThickness="2" Margin="0,0,10,0">
                <Image x:Name="Image1" Width="300" Height="200" Source="Assets/placeholder-sdk.png" />
            </Border>
            <Ellipse x:Name="Ellipse1" Width="300" Height="200" Stroke="Black" StrokeThickness="2" Fill="LightBlue" />
        </StackPanel>
                
        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="DefaultLayout" />
                <VisualState x:Name="Below768Layout" />
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
