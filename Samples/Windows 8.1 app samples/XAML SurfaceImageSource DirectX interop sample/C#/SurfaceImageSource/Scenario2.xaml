<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="SurfaceImageSource.Scenario2"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SurfaceImageSource"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <TextBlock TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                The demonstration below shows how to use a SurfaceImageSource to include C++ DirectX content in a XAML application.
                In this example a SurfaceImageSource is filled with a spinning cube rendered using Direct3D.  The SurfaceImageSource is
                then used to fill both the XAML Image control and Ellipse shape below.
                Clicking the button will start and stop the cube's animation using the XAML frame rendering callback.
            </TextBlock>
            <Button Content="Toggle Direct3D animation" Grid.Row="1" Margin="0,10,0,10" Click="ToggleAnimation_Click" />
        </Grid>
        
        <StackPanel x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1" Orientation="Horizontal">
            <Border BorderBrush="Black" BorderThickness="2" Margin="0,0,10,0">
                <Image x:Name="Image2" Width="300" Height="200" Source="Assets/placeholder-sdk.png" />
            </Border>
            <Ellipse x:Name="Ellipse2" Width="300" Height="200" Stroke="Black" StrokeThickness="2" Fill="LightBlue" />
        </StackPanel>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="DefaultLayout" />
                <VisualState x:Name="Below768Layout" />
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
